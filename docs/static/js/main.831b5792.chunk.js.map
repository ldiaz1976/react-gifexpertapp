{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","elem","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,+DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCJHO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAAe,ECAd,SAAEA,GAAe,IAAD,EAEdd,mBAAU,CAChCqB,KAAK,GACLa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAGrB,CAACpB,IAEGqB,EDfwBK,CAAa1B,GAAhCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,wCAAd,SAAwDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEbxBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCXjC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.831b5792.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategorias} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>1){\r\n            setCategorias( elem => [inputValue, ...elem]);\r\n            setInputValue('');\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category ) }&limit=10&api_key=TmPpGjC9tdyzxKyiGLyYawtNHImjKbz0`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__backInDown animate__delay-1s'>\r\n            <img src={url} alt={ title }/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ( { category} ) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category );\r\n \r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__backInDown'>{ category }</h3>\r\n\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState ({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}